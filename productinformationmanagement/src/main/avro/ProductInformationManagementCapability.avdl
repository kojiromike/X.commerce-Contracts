@namespace("com.x.pim.v1")
@status("Working Draft")
protocol ProductInformationManagementCapability
{
	import idl "com.x.core.v1.CurrencyAmount.avdl";
	import idl "com.x.core.v1.Error.avdl";
	import idl "com.x.core.v1.Query.avdl";
	import idl "com.x.core.v1.Locale.avdl";
	
    enum FilterType 
    {
        SUMMARY,
        FULL_DETAILS
    }
 
	record LocalizedMeasurement 
	{
		union {null, com.x.core.v1.Locale} locale = null;
		string name;
		string unit;
		string value;
	}
	
 	record LocalizedNameValue 
 	{
 		union {null, com.x.core.v1.Locale} locale = null;
 		string name;
 		string value;
 	}
 	
 	record LocalizedString 
 	{
 		union {null, com.x.core.v1.Locale} locale = null;
  		string stringValue;
 	}
 	
    record BooleanAttributeValue
    {
        boolean value;
        union {null, array<LocalizedString>} attributeName = null;
    }
 
     record StringAttributeValue 
     {
         array<LocalizedNameValue> attributeNameValue;
     }
     
     record MeasurementAttributeValue 
     {
         array<LocalizedMeasurement> localizedMeasurementValue;
     }
     
    record StringEnumerationAttributeValue
    {
        // valueId is the id of the value defined in ProductTaxonomy StringEnumeration 
        array<string> valueId;
        // this localized value will be populated by capability 
        union {null, map<StringAttributeValue>} attributeValues = null;
    }
 
    record ProductTypeStringAttributeValue
    {
        // a string attribute value can optionally refer to 
        // a predefined value in ProductTaxonomy, or it can be localized name/value pair 
        union {null, string} valueId = null;
        // this localized value can be populated by capability if valueId is present 
        // if valueId is not present, the localized values can be populated by requester 
        union {null, StringAttributeValue} attributeValue = null;
    }
     
    record CustomAttributeValue 
    {
 		union {null, BooleanAttributeValue, StringAttributeValue, MeasurementAttributeValue} value = null;
    }
     
    record ProductTypeAttributeValue
    {
    	// an attribute of a product type defined by producttaxonomy
        union {ProductTypeStringAttributeValue, StringEnumerationAttributeValue, BooleanAttributeValue} value;
    }
 
    record ProductAttributeValue
    {
      	string attributeId;
        union {ProductTypeAttributeValue, CustomAttributeValue} attributeValue;
    }
  
    record Image
    {
        string url;
    // height in pixel
    union {null, int} height = null;
    // width in pixel
    union {null, int} width = null;
    union {null, LocalizedString} label = null;
    union {null, LocalizedString} altText = null;
    }

    //
    // Stock Keeping Unit
    //
    record SKU
    {
        //unique identifier of the SKU
        string sku;
        // ID of the product for this SKU (required)
        string productId;
        // Manufacturer suggested retail price, override the field in Product
        union {null, com.x.core.v1.CurrencyAmount} MSRP = null;
        // Minimal advertisement price, override the field in Product
        union {null, com.x.core.v1.CurrencyAmount} MAP = null;
        // variation attributes, the list must match the variationAttributeIds in Product 
        union {null, array<ProductAttributeValue>} variationAttributeValues = null;
        // SKU specific images 
        union {null, array<Image>} images = null;
        
    }
    
    record SKUData
    {
        // ID of the product for this SKU (required)
        string productId;
        // Manufacturer suggested retail price, override the field in Product
        union {null, com.x.core.v1.CurrencyAmount} MSRP = null;
        // Minimal advertisement price, override the field in Product
        union {null, com.x.core.v1.CurrencyAmount} MAP = null;
        // variation attributes, the list must match the variationAttributeIds in Product 
        union {null, array<ProductAttributeValue>} variationAttributeValues = null;
        // SKU specific images 
        union {null, array<Image>} images = null;
        
    }
    

    record Product 
    {
        // product id 
        string id;
        // ID of the product type 
        union {null, string} productTypeId = null;
        // descriptive name
        union {null, array<LocalizedString>} name = null;
        // short description
        union {null, array<LocalizedString>} shortDescription = null;
        // full description
        union {null, array<LocalizedString>} description = null;
        union {null, string} GTIN = null;
        union {null, array<LocalizedString>} brand = null;
        union {null, array<LocalizedString>} manufacturer = null;
        union {null, string} MPN = null;
        // Manufacturer suggested retail price
        union {null, com.x.core.v1.CurrencyAmount} MSRP = null;
        // Minimal advertisement price
        union {null, com.x.core.v1.CurrencyAmount} MAP = null;
        // product images 
        union {null, array<Image>} images = null;
        // product attributes 
        union {null, array<ProductAttributeValue>} attributes = null;
        // defines the ids of variation variables 
        union {null, array<string>} variationFactors = null;
        // list of associated SKUs
        union {null, array<SKU>} skuList = null;
    }
    
    record ProductData 
    {
        // ID of the product type 
        union {null, string} productTypeId = null;
        // descriptive name
        union {null, array<LocalizedString>} name = null;
        // short description
        union {null, array<LocalizedString>} shortDescription = null;
        // full description
        union {null, array<LocalizedString>} description = null;
        union {null, string} GTIN = null;
        union {null, array<LocalizedString>} brand = null;
        union {null, array<LocalizedString>} manufacturer = null;
        union {null, string} MPN = null;
        // Manufacturer suggested retail price
        union {null, com.x.core.v1.CurrencyAmount} MSRP = null;
        // Minimal advertisement price
        union {null, com.x.core.v1.CurrencyAmount} MAP = null;
        // product images 
        union {null, array<Image>} images = null;
        // product attributes 
        union {null, array<ProductAttributeValue>} attributes = null;
        // defines the ids of variation variables 
        union {null, array<string>} variationFactors = null;
        // list of associated SKUs
        union {null, array<SKU>} skuList = null;
    }

    enum ProductIdType 
    {
        PRODUCT_ID,
        SKU
    }
    
    record ProductIdentifier 
    {
        string value;
        ProductIdType type;
    }
    
    //
    // Create products
    //
    @topic("/com.x.pim.v1/ProductCreation/CreateProduct")
    @version("1.1.0")
    record CreateProduct
    {
        array<ProductData> products;
    }
     
    @topic("/com.x.pim.v1/ProductCreation/CreateProductSucceeded")
    @version("1.1.0")
    record CreateProductSucceeded
    {
    	array<Product> products; //should now contain product IDs
    }
 
    @topic("/com.x.pim.v1/ProductCreation/CreateProductFailed")
    @version("1.1.0")
    record CreateProductFailed
    {
        array<ProductData> products;
        array<com.x.core.v1.Error> errors;
    }
    
    @topic("/com.x.pim.v1/ProductCreation/ProductCreated")
    @version("1.1.0")
    record ProductCreated
    {
        array<Product> products;
    }
    
    //
    // Get products
    //
    @topic("/com.x.pim.v1/ProductLookup/LookupProduct")
    @version("1.1.0")
    record LookupProduct
    {
        array<ProductIdentifier> ids;
        union {null, FilterType} filter = null; 
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
    }
 
	@topic("/com.x.pim.v1/ProductLookup/LookupProductSucceeded")
    @version("1.1.0")
    record LookupProductSucceeded
    {
        array<Product> products;
        union {null, FilterType} filter = null; 
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
    }
 
	@topic("/com.x.pim.v1/ProductLookup/LookupProductFailed")
    @version("1.1.0")
    record LookupProductFailed
    {
        array<ProductIdentifier> ids;
        union {null, FilterType} filter = null; 
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
        array<com.x.core.v1.Error> errors;
    }
 
    @topic("/com.x.pim.v1/ProductSearch/SearchProduct")
    @version("1.1.0")
    record SearchProduct
    {
        com.x.core.v1.Query  @queryType("com.x.pim.v1.Product") query;
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
    }
 
    @topic("/com.x.pim.v1/ProductSearch/SearchProductSucceeded")
    @version("1.1.0")
    record SearchProductSucceeded
    {
        com.x.core.v1.Query query;
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
        array<Product> products;
    }
 
    @topic("/com.x.pim.v1/ProductSearch/SearchProductFailed")
    @version("1.1.0")
    record SearchProductFailed
    {
        com.x.core.v1.Query query;
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        union { null, array<com.x.core.v1.Locale> } locales = null;
        array<com.x.core.v1.Error> errors;
    }
 
    //
    // Update products
    //
    @topic("/com.x.pim.v1/ProductUpdate/UpdateProduct")
    @version("1.1.0")
    record UpdateProduct
    {
        array<Product> products;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/UpdateProductSucceeded")
    @version("1.1.0")
    record UpdateProductSucceeded
    {
   	    array<Product> products;
    }
 
    @topic("/com.x.pim.v1/ProductUpdate/UpdateProductFailed")
    @version("1.1.0")
    record UpdateProductFailed
    {
        array<Product> products;
        array<com.x.core.v1.Error> errors;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/ProductUpdated")
    @version("1.1.0")   
	record ProductUpdated
    {
        array<Product> products;
    }
	
	//
    // Delete products
    // 
    @topic("/com.x.pim.v1/ProductDeletion/DeleteProduct")
    @version("1.1.0")
    record DeleteProduct
    {
        array<string> productIds;
    }
 
    @topic("/com.x.pim.v1/ProductDeletion/DeleteProductSucceeded")
    @version("1.1.0")
    record DeleteProductSucceeded
    {
     	array<string> productIds;
    }
 
    @topic("/com.x.pim.v1/ProductDeletion/DeleteProductFailed")
    @version("1.1.0")
    record DeleteProductFailed
    {
        array<string> productIds;
        array<com.x.core.v1.Error> errors;
    }

    @topic("/com.x.pim.v1/ProductDeletion/ProductDeleted")
    @version("1.1.0")
    record ProductDeleted
    {
        array<Product> products;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/CreateSKU")
    @version("1.1.0")
    record CreateSKU
    {
        array<SKUData> sku;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/CreateSKUFailed")
    @version("1.1.0")
    record CreateSKUFailed
    {
        array<SKU> skus;
        array<com.x.core.v1.Error> errors;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/CreateSKUSucceeded")
    @version("1.1.0")
    record CreateSKUSucceeded
    {
        array<SKU> sku;
    }
        
    @topic("/com.x.pim.v1/ProductUpdate/UpdateSKU")
    @version("1.1.0")
    record UpdateSKU
    {
        array<SKU> skus;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/UpdateSKUSucceeded")
    @version("1.1.0")
    record UpdateSKUSucceeded
    {
        array<SKU> skus;
    }
    
    @topic("/com.x.pim.v1/ProductUpdate/UpdateSKUFailed")
    @version("1.1.0")
    record UpdateSKUFailed
    {
        array<SKU> skus;
        array<com.x.core.v1.Error> errors;
    }	
    
    @topic("/com.x.pim.v1/ProductUpdate/DeleteSKU")
    @version("1.1.0")
    record DeleteSKU
    {
        array<string> skus;
    }
        
    @topic("/com.x.pim.v1/ProductUpdate/DeleteSKUSucceeded")
    @version("1.1.0")
    record DeleteSKUSucceeded
    {
    	array<string> skus;
    }

    @topic("/com.x.pim.v1/ProductUpdate/DeleteSKUFailed")
    @version("1.1.0")
    record DeleteSKUFailed
    {
        array<string> skus;
        array<com.x.core.v1.Error> errors;
    }
        
}
