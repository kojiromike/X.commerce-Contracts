@namespace("com.x.catalog.v1")
 
protocol CatalogCapability 
{
    record BooleanAttributeValue
    {
        boolean value;
    }
 
    record StringEnumerationAttributeValue
    {
        string enumerationIndex;
    }
 
    record StringAttributeValue
    {
        string value;
    }
 
    record ProductAttributeValue
    {
        String attributeId;
        union {StringAttributeValue, StringEnumerationAttributeValue, BooleanAttributeValue};
    }
 
    enum ProductFilter 
    {
        SUMMARY,
        FULL_DETAILS
    }
 
    enum SKUFilter 
    {
        SUMMARY,
        FULL_DETAILS
    }
 
    // TODO: Query pattern from paid search advertising
    record Query 
    {
        TBD
    }
 
    record ProductImage
    {
        string url;
        // TODO: Other image attributes
    }

    // TODO: Set of ProductAttributeValues
    record Product 
    {
        /** product id */
        union {null, string} id;
        /** ID of the product type */
        union {null, string} productTypeId;
        /** product images */
        union {null, array<ProductImage> images = null;
        /** product attributes */
        union {null, array<ProductAttributeValue>} attributes;
    }

    enum Condition
    {
        // TODO enumerated values of condition
    }

    record StockKeepingUnit
    {
        /** ID for the SKU generated by X */
        union {null, string} skuId;
        /** ID of the product for this SKU */
        union {null, string} productId;
        /** ID for the SKU provided by merchant  */
        union {null, string} skuMerchantId;
        /** variation attributes */
        union {null, array<ProductAttributeValue>} attributes;
    }

    /*-------------------------------------------------------------------
    /* Message definitions
    /*-------------------------------------------------------------------
    /**
     * Create products
     */
    @topic("/catalog/product/create")
    @version("1.0.0")
    record CreateProduct
    {
        array<Product> products;
    }
 
    @topic("/catalog/product/created")
    @version("1.0.0")
    record ProductCreated
    {
        array<Product> products;
    }
 
    @topic("/catalog/product/createFailed")
    @version("1.0.0")
    record CreateProductFailed
    {
        array<Product> products;
        array<Error> errors;
    }
 
    /**
     * Create SKUs
     */
    @topic("/catalog/sku/create")
    @version("1.0.0")
    record CreateSKU
    {
        array<SKU> skus;
    }
 
    @topic("/catalog/SKU/created")
    @version("1.0.0")
    record SKUCreated
    {
        array<SKU> skus;
    }
 
    @topic("/catalog/sku/createFailed")
    @version("1.0.0")
    record CreateSKUFailed
    {
        array<SKU> skus;
        array<Error> errors;
    }
 
    /**
     * Get Products
     */
    @topic("/catalog/product/get")
    @version("1.0.0")
    record GetProduct
    {
        array<string> productIds;
        union {null, ProductFilter} filter; 
        // TODO: locale
    }
 
    @topic("/catalog/product/getSucceeded")
    @version("1.0.0")
    record GetProductSucceeded
    {
        array<Product> products;
        union {null, ProductFilter} filter; 
        // TODO: locale
    }
 
    @topic("/catalog/product/getFailed")
    @version("1.0.0")
    record GetProductFailed
    {
        array<string> productIds;
        union {null, ProductFilter} filter; 
        // TODO: locale
        array<Error> errors;
    }
 
    /**
     * Get SKUs
     */
    @topic("/catalog/sku/get")
    @version("1.0.0")
    record GetSKU
    {
        array<string> skuIds;
        union {null, SKUFilter} filter; 
        // TODO: locale
    }
 
    @topic("/catalog/sku/getSucceeded")
    @version("1.0.0")
    record GetSKUSucceeded
    {
        array<SKU> skus;
        union {null, SKUFilter} filter; 
        // TODO: locale
    }
 
    @topic("/catalog/SKU/getFailed")
    @version("1.0.0")
    record GetSKUFailed
    {
        array<string> skuIDs;
        union {null, SKUFilter} filter; 
        // TODO: locale
        array<Error> errors;
    }
 
    // TODO: Use Query pattern
    @topic("/catalog/product/search")
    @version("1.0.0")
    record SearchProduct
    {
        Query query;
        // TODO: locale
    }
 
    @topic("/catalog/product/searchSucceeded")
    @version("1.0.0")
    record SearchProductSucceeded
    {
        Query query;
        // TODO: locale
        QueryResult queryResult;
    }
 
    @topic("/catalog/product/searchFailed")
    @version("1.0.0")
    record SearchProductFailed
    {
        Query query;
        // TODO: locale
        array<Error> errors;
    }
 
    // TODO: Use Query pattern
    @topic("/catalog/sku/search")
    @version("1.0.0")
    record SearchSKU
    {
        Query query;
        // TODO: locale
    }
 
    @topic("/catalog/sku/searchSucceeded")
    @version("1.0.0")
    record SearchSKUSucceeded
    {
        Query query;
        // TODO: locale
        QueryResult queryResult;
    }
 
    @topic("/catalog/product/searchFailed")
    @version("1.0.0")
    record SearchProductFailed
    {
        Query query;
        // TODO: locale
        array<Error> errors;
    }
 
    /** Update Product */
    @topic("/catalog/product/update")
    @version("1.0.0")
    record UpdateProduct
    {
        Product product;
    }
 
    @topic("/catalog/product/updated")
    @version("1.0.0")
    record ProductUpdated
    {
        Product product;
    }
 
    @topic("/catalog/product/updateFailed")
    @version("1.0.0")
    record UpdateProductFailed
    {
        Product product;
        array<Error> errors;
    }
 
    /** Update SKU */
    @topic("/catalog/sku/update")
    @version("1.0.0")
    record UpdateSKU
    {
        SKU sku;
    }
 
    @topic("/catalog/sku/updated")
    @version("1.0.0")
    record SKUUpdated
    {
        SKU sku;
    }
 
    @topic("/catalog/sku/updateFailed")
    @version("1.0.0")
    record UpdateSKUFailed
    {
        SKU sku;
        array<Error> errors;
    }
 
    /** Delete Product */
    @topic("/catalog/product/delete")
    @version("1.0.0")
    record DeleteProduct
    {
        Product product;
    }
 
    @topic("/catalog/product/deleted")
    @version("1.0.0")
    record ProductDeleted
    {
        Product product;
    }
 
    @topic("/catalog/product/deleteFailed")
    @version("1.0.0")
    record DeleteProductFailed
    {
        Product product;
        array<Error> errors;
    }

    /** Delete SKU */
    @topic("/catalog/sku/delete")
    @version("1.0.0")
    record DeleteSKU
    {
        SKU sku;
    }
 
    @topic("/catalog/sku/deleted")
    @version("1.0.0")
    record SKUDeleted
    {
        SKU sku;
    }
 
    @topic("/catalog/sku/deleteFailed")
    @version("1.0.0")
    record DeleteSKUFailed
    {
        SKU sku;
        array<Error> errors;
    }
}
}
