@namespace("com.x.inventory.v1")
 
protocol InventoryCapability 
{
 

    /** This record is used to return error information */
    record Error
    {
        /** Numeric value that indicates the type of error */
        string code;
 
        /**  Key whose value is a human displayable version of this error */
        union {null, string} message = null;
 
        /** 
         * Parameters for the message. Parameter place holders identified 
         * using the format in java.text.MessageFormat. The key of the map is
         * the placeholder string, and the value is the string that replaces it. 
         */
        union {null, map<string>} parameters = null;
    }

    // TODO: Model location (warehouse)
    record Location
    {
	string name;
    }

    record StockItem 
    {
        string skuId;
        int quantity;  // note: this is a "read only" field due to serialization issues.
        Location location;
    }

    enum Filter 
    {
    }

    record InventoryError
    {
	StockItem stockItem;
	array<Error> errors;
    }
 
    /*-------------------------------------------------------------------*/
    /* Message definitions                                               */
    /*-------------------------------------------------------------------*/
    @topic("/inventory/stockItem/create")
    @version("1.0.0")
    record CreateStockItem
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/created")
    @version("1.0.0")
    record StockItemUpdated
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/createFailed")
    @version("1.0.0")
    record CreateStockItemFailed
    {
        array<InventoryError> createErrors;
    }

    @topic("/inventory/stockItem/get")
    @version("1.0.0")
    record GetStockItem
    {
        array<string> stockItemIds;
        union {null, Filter} filter; 
    }
 
    @topic("/inventory/stockItem/getSucceeded")
    @version("1.0.0")
    record GetStockItemSucceeded
    {
        array<StockItem> stockItems;
        union {null, Filter} filter; 
    }
 
    @topic("/inventory/stockItem/getFailed")
    @version("1.0.0")
    record GetStockItemFailed
    {
        union {null, Filter} filter; 
        array<InventoryError> getErrors;
    }
 
    //Note: this update command will update all fields of the StockItem except the quantity field.
    //Use the updateQuantity message to update that field.
    @topic("/inventory/stockItem/update")
    @version("1.0.0")
    record UpdateStockItem
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/updated")
    @version("1.0.0")
    record StockItemUpdated
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/updateFailed")
    @version("1.0.0")
    record UpdateStockItemFailed
    {
        array<InventoryError> updateErrors;
    }

    //This is a relative assignment (+3 or -1), not an absolute assignment of quantity.
    //If you want an absolute assignment, first do a get, compute the delta from that
    //amount to your target amount and send an updateQuantity message with that delta.
    //Then listen for the quantityUpdated response (and compare that quantity to your 
    //desired absolute amount).
    @topic("/inventory/stockItem/updateQuantity")
    @version("1.0.0")
    record UpdateQuantity
    {
        string skuId;
        Location location;
	int quantity;
    }

    @topic("/inventory/stockItem/quantityUpdated")
    @version("1.0.0")
    record QuantityUpdated
    {
        StockItem stockItem;
    }
 
    @topic("/inventory/stockItem/updateQuantityFailed")
    @version("1.0.0")
    record UpdateQuantityFailed
    {
        Error quantityUpdateError;
    }
 
    @topic("/inventory/stockItem/delete")
    @version("1.0.0")
    record DeleteStockItem
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/deleted")
    @version("1.0.0")
    record StockItemDeleted
    {
        array<StockItem> stockItems;
    }
 
    @topic("/inventory/stockItem/deleteFailed")
    @version("1.0.0")
    record DeleteStockItemFailed
    {
        array<InventoryError> deleteErrors;
    }

    @topic("/inventory/stockItem/outOfStock")
    @version("1.0.0")
    record OutOfStock
    {
        StockItem stockItem;
    }

}
