/*
* generated by Xtext
*/
grammar InternalXOCL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.x.xocl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.x.xocl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.x.xocl.services.XOCLGrammarAccess;

}

@parser::members {

 	private XOCLGrammarAccess grammarAccess;
 	
    public InternalXOCLParser(TokenStream input, XOCLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Domainmodel";	
   	}
   	
   	@Override
   	protected XOCLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDomainmodel
entryRuleDomainmodel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainmodelRule()); }
	 iv_ruleDomainmodel=ruleDomainmodel 
	 { $current=$iv_ruleDomainmodel.current; } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainmodelAccess().getElementsTopLevelElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleTopLevelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainmodelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"TopLevelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleTopLevelElement
entryRuleTopLevelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopLevelElementRule()); }
	 iv_ruleTopLevelElement=ruleTopLevelElement 
	 { $current=$iv_ruleTopLevelElement.current; } 
	 EOF 
;

// Rule TopLevelElement
ruleTopLevelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getImportParserRuleCall_0()); 
    }
    this_Import_0=ruleImport
    { 
        $current = $this_Import_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getPackageParserRuleCall_1()); 
    }
    this_Package_1=rulePackage
    { 
        $current = $this_Package_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getPackageQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_package_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"package",
        		lv_package_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getPackageNameParserRuleCall_0()); 
    }
    this_PackageName_0=rulePackageName    {
		$current.merge(this_PackageName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); } 
	 iv_rulePackageName=rulePackageName 
	 { $current=$iv_rulePackageName.current.getText(); }  
	 EOF 
;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPackageNameAccess().getQualifiedNameParserRuleCall()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getNamePackageNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePackageName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"PackageName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getVersionVersionStringParserRuleCall_2_0()); 
	    }
		lv_version_2_0=ruleVersionString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_2_0, 
        		"VersionString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getElementsPackageElementParserRuleCall_4_0()); 
	    }
		lv_elements_4_0=rulePackageElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"PackageElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleVersionString
entryRuleVersionString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionStringRule()); }
	 iv_ruleVersionString=ruleVersionString 
	 { $current=$iv_ruleVersionString.current; } 
	 EOF 
;

// Rule VersionString
ruleVersionString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVersionStringAccess().getTwoPartVersionStringParserRuleCall_0()); 
    }
    this_TwoPartVersionString_0=ruleTwoPartVersionString
    { 
        $current = $this_TwoPartVersionString_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVersionStringAccess().getFourPartVersionStringParserRuleCall_1()); 
    }
    this_FourPartVersionString_1=ruleFourPartVersionString
    { 
        $current = $this_FourPartVersionString_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTwoPartVersionString
entryRuleTwoPartVersionString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTwoPartVersionStringRule()); }
	 iv_ruleTwoPartVersionString=ruleTwoPartVersionString 
	 { $current=$iv_ruleTwoPartVersionString.current; } 
	 EOF 
;

// Rule TwoPartVersionString
ruleTwoPartVersionString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_major_0_0=RULE_INT
		{
			newLeafNode(lv_major_0_0, grammarAccess.getTwoPartVersionStringAccess().getMajorINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTwoPartVersionStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"major",
        		lv_major_0_0, 
        		"INT");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTwoPartVersionStringAccess().getFullStopKeyword_1());
    }
(
(
		lv_minor_2_0=RULE_INT
		{
			newLeafNode(lv_minor_2_0, grammarAccess.getTwoPartVersionStringAccess().getMinorINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTwoPartVersionStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"minor",
        		lv_minor_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleFourPartVersionString
entryRuleFourPartVersionString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFourPartVersionStringRule()); }
	 iv_ruleFourPartVersionString=ruleFourPartVersionString 
	 { $current=$iv_ruleFourPartVersionString.current; } 
	 EOF 
;

// Rule FourPartVersionString
ruleFourPartVersionString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFourPartVersionStringAccess().getTwoPartVersionStringParserRuleCall_0()); 
    }
    this_TwoPartVersionString_0=ruleTwoPartVersionString
    { 
        $current = $this_TwoPartVersionString_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_release_1_0=	'.' 
    {
        newLeafNode(lv_release_1_0, grammarAccess.getFourPartVersionStringAccess().getReleaseFullStopKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFourPartVersionStringRule());
	        }
       		setWithLastConsumed($current, "release", lv_release_1_0, ".");
	    }

)
)this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getFourPartVersionStringAccess().getINTTerminalRuleCall_2()); 
    }
(
(
		lv_build_3_0=	'.' 
    {
        newLeafNode(lv_build_3_0, grammarAccess.getFourPartVersionStringAccess().getBuildFullStopKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFourPartVersionStringRule());
	        }
       		setWithLastConsumed($current, "build", lv_build_3_0, ".");
	    }

)
)this_INT_4=RULE_INT
    { 
    newLeafNode(this_INT_4, grammarAccess.getFourPartVersionStringAccess().getINTTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulePackageElement
entryRulePackageElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageElementRule()); }
	 iv_rulePackageElement=rulePackageElement 
	 { $current=$iv_rulePackageElement.current; } 
	 EOF 
;

// Rule PackageElement
rulePackageElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getPartnerParserRuleCall_0()); 
    }
    this_Partner_0=rulePartner
    { 
        $current = $this_Partner_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getProcessParserRuleCall_1()); 
    }
    this_Process_1=ruleProcess
    { 
        $current = $this_Process_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getEntityParserRuleCall_2()); 
    }
    this_Entity_2=ruleEntity
    { 
        $current = $this_Entity_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getWorkflowParserRuleCall_3()); 
    }
    this_Workflow_3=ruleWorkflow
    { 
        $current = $this_Workflow_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getTransactionParserRuleCall_4()); 
    }
    this_Transaction_4=ruleTransaction
    { 
        $current = $this_Transaction_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageElementAccess().getProtocolParserRuleCall_5()); 
    }
    this_Protocol_5=ruleProtocol
    { 
        $current = $this_Protocol_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePartner
entryRulePartner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartnerRule()); }
	 iv_rulePartner=rulePartner 
	 { $current=$iv_rulePartner.current; } 
	 EOF 
;

// Rule Partner
rulePartner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='partner' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartnerAccess().getPartnerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartnerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPartnerAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='responsibilities' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartnerAccess().getResponsibilitiesKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPartnerAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartnerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPartnerAccess().getResponsibilitiesProcessRoleCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartnerAccess().getCommaKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartnerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPartnerAccess().getResponsibilitiesProcessRoleCrossReference_6_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPartnerAccess().getRightParenthesisKeyword_7());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPartnerAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	 iv_ruleProcess=ruleProcess 
	 { $current=$iv_ruleProcess.current; } 
	 EOF 
;

// Rule Process
ruleProcess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='process' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getRolesProcessRoleParserRuleCall_3_0()); 
	    }
		lv_roles_3_0=ruleProcessRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_3_0, 
        		"ProcessRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getRolesProcessRoleParserRuleCall_4_1_0()); 
	    }
		lv_roles_5_0=ruleProcessRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_5_0, 
        		"ProcessRole");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcessAccess().getRightParenthesisKeyword_5());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_6());
    }
	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcessAccess().getDescriptionKeyword_7());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getProcessAccess().getDescriptionSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getPreconditionsPreconditionsParserRuleCall_9_0()); 
	    }
		lv_preconditions_10_0=rulePreconditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"preconditions",
        		lv_preconditions_10_0, 
        		"Preconditions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getPostconditionsPostconditionsParserRuleCall_10_0()); 
	    }
		lv_postconditions_11_0=rulePostconditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"postconditions",
        		lv_postconditions_11_0, 
        		"Postconditions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleProcessRole
entryRuleProcessRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessRoleRule()); }
	 iv_ruleProcessRole=ruleProcessRole 
	 { $current=$iv_ruleProcessRole.current; } 
	 EOF 
;

// Rule ProcessRole
ruleProcessRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getProcessRoleAccess().getRoleParserRuleCall()); 
    }
    this_Role_0=ruleRole
    { 
        $current = $this_Role_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	 iv_ruleRole=ruleRole 
	 { $current=$iv_ruleRole.current; } 
	 EOF 
;

// Rule Role
ruleRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRulePreconditions
entryRulePreconditions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreconditionsRule()); }
	 iv_rulePreconditions=rulePreconditions 
	 { $current=$iv_rulePreconditions.current; } 
	 EOF 
;

// Rule Preconditions
rulePreconditions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='preconditions' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreconditionsAccess().getPreconditionsKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreconditionsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPreconditionsAccess().getConditionsEntityStateCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPreconditionsAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPreconditionsAccess().getConditionsEntityStateCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPreconditionsAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='entity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getStatesEntityStateParserRuleCall_3_0()); 
	    }
		lv_states_3_0=ruleEntityState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_3_0, 
        		"EntityState");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEntityState
entryRuleEntityState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityStateRule()); }
	 iv_ruleEntityState=ruleEntityState 
	 { $current=$iv_ruleEntityState.current; } 
	 EOF 
;

// Rule EntityState
ruleEntityState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='state' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityStateAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityStateAccess().getTransitionsEntityStateTransitionParserRuleCall_2_1_0()); 
	    }
		lv_transitions_3_0=ruleEntityStateTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityStateRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_3_0, 
        		"EntityStateTransition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityStateAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityStateAccess().getTransitionsEntityStateTransitionParserRuleCall_2_2_1_0()); 
	    }
		lv_transitions_5_0=ruleEntityStateTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityStateRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_5_0, 
        		"EntityStateTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEntityStateAccess().getRightSquareBracketKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleEntityStateTransition
entryRuleEntityStateTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityStateTransitionRule()); }
	 iv_ruleEntityStateTransition=ruleEntityStateTransition 
	 { $current=$iv_ruleEntityStateTransition.current; } 
	 EOF 
;

// Rule EntityStateTransition
ruleEntityStateTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityStateTransitionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getEntityStateTransitionAccess().getSuccessorEntityStateCrossReference_0()); 
	}

)
)
;





// Entry rule entryRulePostconditions
entryRulePostconditions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostconditionsRule()); }
	 iv_rulePostconditions=rulePostconditions 
	 { $current=$iv_rulePostconditions.current; } 
	 EOF 
;

// Rule Postconditions
rulePostconditions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='postconditions' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPostconditionsAccess().getPostconditionsKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostconditionsAccess().getPostconditionsAction_1(),
            $current);
    }
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPostconditionsAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostconditionsAccess().getSuccessOnProcessSuccessParserRuleCall_3_0()); 
	    }
		lv_success_3_0=ruleOnProcessSuccess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostconditionsRule());
	        }
       		set(
       			$current, 
       			"success",
        		lv_success_3_0, 
        		"OnProcessSuccess");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPostconditionsAccess().getFailureOnProcessFailureParserRuleCall_4_0()); 
	    }
		lv_failure_4_0=ruleOnProcessFailure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostconditionsRule());
	        }
       		set(
       			$current, 
       			"failure",
        		lv_failure_4_0, 
        		"OnProcessFailure");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPostconditionsAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleOnProcessSuccess
entryRuleOnProcessSuccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOnProcessSuccessRule()); }
	 iv_ruleOnProcessSuccess=ruleOnProcessSuccess 
	 { $current=$iv_ruleOnProcessSuccess.current; } 
	 EOF 
;

// Rule OnProcessSuccess
ruleOnProcessSuccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='success' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOnProcessSuccessAccess().getSuccessKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOnProcessSuccessAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnProcessSuccessRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOnProcessSuccessAccess().getResultsEntityStateCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOnProcessSuccessAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnProcessSuccessRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOnProcessSuccessAccess().getResultsEntityStateCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOnProcessSuccessAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleOnProcessFailure
entryRuleOnProcessFailure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOnProcessFailureRule()); }
	 iv_ruleOnProcessFailure=ruleOnProcessFailure 
	 { $current=$iv_ruleOnProcessFailure.current; } 
	 EOF 
;

// Rule OnProcessFailure
ruleOnProcessFailure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='failure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOnProcessFailureAccess().getFailureKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOnProcessFailureAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnProcessFailureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOnProcessFailureAccess().getResultsEntityStateCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOnProcessFailureAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnProcessFailureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOnProcessFailureAccess().getResultsEntityStateCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOnProcessFailureAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleWorkflow
entryRuleWorkflow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowRule()); }
	 iv_ruleWorkflow=ruleWorkflow 
	 { $current=$iv_ruleWorkflow.current; } 
	 EOF 
;

// Rule Workflow
ruleWorkflow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workflow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkflowAccess().getWorkflowKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getWorkflowAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkflowAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getVariantsWorkflowVariantParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleWorkflowVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"WorkflowVariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWorkflowAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getVariantsWorkflowVariantParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleWorkflowVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"WorkflowVariant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkflowAccess().getGreaterThanSignKeyword_2_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getRolesWorkflowRolesParserRuleCall_3_0()); 
	    }
		lv_roles_7_0=ruleWorkflowRoles		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		set(
       			$current, 
       			"roles",
        		lv_roles_7_0, 
        		"WorkflowRoles");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getContentsWorkflowBlockParserRuleCall_4_0()); 
	    }
		lv_contents_8_0=ruleWorkflowBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		set(
       			$current, 
       			"contents",
        		lv_contents_8_0, 
        		"WorkflowBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWorkflowVariant
entryRuleWorkflowVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowVariantRule()); }
	 iv_ruleWorkflowVariant=ruleWorkflowVariant 
	 { $current=$iv_ruleWorkflowVariant.current; } 
	 EOF 
;

// Rule WorkflowVariant
ruleWorkflowVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getWorkflowVariantAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleWorkflowRoles
entryRuleWorkflowRoles returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowRolesRule()); }
	 iv_ruleWorkflowRoles=ruleWorkflowRoles 
	 { $current=$iv_ruleWorkflowRoles.current; } 
	 EOF 
;

// Rule WorkflowRoles
ruleWorkflowRoles returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWorkflowRolesAccess().getRoleDeclarationsParserRuleCall_0()); 
    }
    this_RoleDeclarations_0=ruleRoleDeclarations
    { 
        $current = $this_RoleDeclarations_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWorkflowRolesAccess().getProcessReferenceParserRuleCall_1()); 
    }
    this_ProcessReference_1=ruleProcessReference
    { 
        $current = $this_ProcessReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRoleDeclarations
entryRuleRoleDeclarations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoleDeclarationsRule()); }
	 iv_ruleRoleDeclarations=ruleRoleDeclarations 
	 { $current=$iv_ruleRoleDeclarations.current; } 
	 EOF 
;

// Rule RoleDeclarations
ruleRoleDeclarations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRoleDeclarationsAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoleDeclarationsAccess().getRolesWorkflowRoleParserRuleCall_1_0()); 
	    }
		lv_roles_1_0=ruleWorkflowRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoleDeclarationsRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_1_0, 
        		"WorkflowRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRoleDeclarationsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoleDeclarationsAccess().getRolesWorkflowRoleParserRuleCall_2_1_0()); 
	    }
		lv_roles_3_0=ruleWorkflowRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoleDeclarationsRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_3_0, 
        		"WorkflowRole");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRoleDeclarationsAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleWorkflowRole
entryRuleWorkflowRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowRoleRule()); }
	 iv_ruleWorkflowRole=ruleWorkflowRole 
	 { $current=$iv_ruleWorkflowRole.current; } 
	 EOF 
;

// Rule WorkflowRole
ruleWorkflowRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getWorkflowRoleAccess().getRoleParserRuleCall()); 
    }
    this_Role_0=ruleRole
    { 
        $current = $this_Role_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleProcessReference
entryRuleProcessReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessReferenceRule()); }
	 iv_ruleProcessReference=ruleProcessReference 
	 { $current=$iv_ruleProcessReference.current; } 
	 EOF 
;

// Rule ProcessReference
ruleProcessReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='implements' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcessReferenceAccess().getImplementsKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProcessReferenceAccess().getImplementsProcessCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWorkflowBlock
entryRuleWorkflowBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowBlockRule()); }
	 iv_ruleWorkflowBlock=ruleWorkflowBlock 
	 { $current=$iv_ruleWorkflowBlock.current; } 
	 EOF 
;

// Rule WorkflowBlock
ruleWorkflowBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkflowBlockAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowBlockAccess().getElementsWorkflowElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleWorkflowElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowBlockRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"WorkflowElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowBlockAccess().getElementsEndPointParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowBlockRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"EndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWorkflowBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleEndPoint
entryRuleEndPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEndPointRule()); }
	 iv_ruleEndPoint=ruleEndPoint 
	 { $current=$iv_ruleEndPoint.current; } 
	 EOF 
;

// Rule EndPoint
ruleEndPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'success' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getEndPointAccess().getNameSuccessKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEndPointRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "success");
	    }

)
)
    |(
(
		lv_name_1_0=	'failure' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getEndPointAccess().getNameFailureKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEndPointRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "failure");
	    }

)
))
;





// Entry rule entryRuleWorkflowElement
entryRuleWorkflowElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowElementRule()); }
	 iv_ruleWorkflowElement=ruleWorkflowElement 
	 { $current=$iv_ruleWorkflowElement.current; } 
	 EOF 
;

// Rule WorkflowElement
ruleWorkflowElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWorkflowElementAccess().getWorkflowBranchParserRuleCall_0()); 
    }
    this_WorkflowBranch_0=ruleWorkflowBranch
    { 
        $current = $this_WorkflowBranch_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWorkflowElementAccess().getWorkflowActionParserRuleCall_1()); 
    }
    this_WorkflowAction_1=ruleWorkflowAction
    { 
        $current = $this_WorkflowAction_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleWorkflowBranch
entryRuleWorkflowBranch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowBranchRule()); }
	 iv_ruleWorkflowBranch=ruleWorkflowBranch 
	 { $current=$iv_ruleWorkflowBranch.current; } 
	 EOF 
;

// Rule WorkflowBranch
ruleWorkflowBranch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='branch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkflowBranchAccess().getBranchKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkflowBranchAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowBranchAccess().getConditionsBranchConditionParserRuleCall_2_0()); 
	    }
		lv_conditions_2_0=ruleBranchCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowBranchRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_2_0, 
        		"BranchCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWorkflowBranchAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBranchCondition
entryRuleBranchCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranchConditionRule()); }
	 iv_ruleBranchCondition=ruleBranchCondition 
	 { $current=$iv_ruleBranchCondition.current; } 
	 EOF 
;

// Rule BranchCondition
ruleBranchCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='condition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBranchConditionAccess().getConditionKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBranchConditionAccess().getLeftParenthesisKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getBranchConditionAccess().getBooleanExpressionParserRuleCall_2()); 
    }
ruleBooleanExpression
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBranchConditionAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchConditionAccess().getContentsWorkflowBlockParserRuleCall_4_0()); 
	    }
		lv_contents_4_0=ruleWorkflowBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchConditionRule());
	        }
       		set(
       			$current, 
       			"contents",
        		lv_contents_4_0, 
        		"WorkflowBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); } 
	 iv_ruleBooleanExpression=ruleBooleanExpression 
	 { $current=$iv_ruleBooleanExpression.current.getText(); }  
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getBooleanExpressionAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleWorkflowAction
entryRuleWorkflowAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowActionRule()); }
	 iv_ruleWorkflowAction=ruleWorkflowAction 
	 { $current=$iv_ruleWorkflowAction.current; } 
	 EOF 
;

// Rule WorkflowAction
ruleWorkflowAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWorkflowActionAccess().getTransactionCallParserRuleCall_0()); 
    }
    this_TransactionCall_0=ruleTransactionCall
    { 
        $current = $this_TransactionCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWorkflowActionAccess().getWorkflowCallParserRuleCall_1()); 
    }
    this_WorkflowCall_1=ruleWorkflowCall
    { 
        $current = $this_WorkflowCall_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransactionCall
entryRuleTransactionCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransactionCallRule()); }
	 iv_ruleTransactionCall=ruleTransactionCall 
	 { $current=$iv_ruleTransactionCall.current; } 
	 EOF 
;

// Rule TransactionCall
ruleTransactionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transaction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransactionCallAccess().getTransactionKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransactionCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTransactionCallAccess().getNameTransactionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransactionCallAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransactionCallAccess().getVariantsTransactionVariantMappingParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleTransactionVariantMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransactionCallRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"TransactionVariantMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTransactionCallAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransactionCallAccess().getVariantsTransactionVariantMappingParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleTransactionVariantMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransactionCallRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"TransactionVariantMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTransactionCallAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransactionCallAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransactionCallAccess().getSenderSenderRoleMappingParserRuleCall_4_0()); 
	    }
		lv_sender_8_0=ruleSenderRoleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransactionCallRule());
	        }
       		set(
       			$current, 
       			"sender",
        		lv_sender_8_0, 
        		"SenderRoleMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTransactionCallAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransactionCallAccess().getReceiverReceiverRoleMappingParserRuleCall_6_0()); 
	    }
		lv_receiver_10_0=ruleReceiverRoleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransactionCallRule());
	        }
       		set(
       			$current, 
       			"receiver",
        		lv_receiver_10_0, 
        		"ReceiverRoleMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTransactionCallAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleTransactionVariantMapping
entryRuleTransactionVariantMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransactionVariantMappingRule()); }
	 iv_ruleTransactionVariantMapping=ruleTransactionVariantMapping 
	 { $current=$iv_ruleTransactionVariantMapping.current; } 
	 EOF 
;

// Rule TransactionVariantMapping
ruleTransactionVariantMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransactionVariantMappingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTransactionVariantMappingAccess().getParameterTransactionVariantCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransactionVariantMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransactionVariantMappingRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getTransactionVariantMappingAccess().getValueWorkflowVariantCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleSenderRoleMapping
entryRuleSenderRoleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSenderRoleMappingRule()); }
	 iv_ruleSenderRoleMapping=ruleSenderRoleMapping 
	 { $current=$iv_ruleSenderRoleMapping.current; } 
	 EOF 
;

// Rule SenderRoleMapping
ruleSenderRoleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_parameter_0_0=	'sender' 
    {
        newLeafNode(lv_parameter_0_0, grammarAccess.getSenderRoleMappingAccess().getParameterSenderKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSenderRoleMappingRule());
	        }
       		setWithLastConsumed($current, "parameter", lv_parameter_0_0, "sender");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSenderRoleMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSenderRoleMappingRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSenderRoleMappingAccess().getValueWorkflowRoleCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleReceiverRoleMapping
entryRuleReceiverRoleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReceiverRoleMappingRule()); }
	 iv_ruleReceiverRoleMapping=ruleReceiverRoleMapping 
	 { $current=$iv_ruleReceiverRoleMapping.current; } 
	 EOF 
;

// Rule ReceiverRoleMapping
ruleReceiverRoleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_parameter_0_0=	'receiver' 
    {
        newLeafNode(lv_parameter_0_0, grammarAccess.getReceiverRoleMappingAccess().getParameterReceiverKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReceiverRoleMappingRule());
	        }
       		setWithLastConsumed($current, "parameter", lv_parameter_0_0, "receiver");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReceiverRoleMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReceiverRoleMappingRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getReceiverRoleMappingAccess().getValueWorkflowRoleCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleWorkflowCall
entryRuleWorkflowCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowCallRule()); }
	 iv_ruleWorkflowCall=ruleWorkflowCall 
	 { $current=$iv_ruleWorkflowCall.current; } 
	 EOF 
;

// Rule WorkflowCall
ruleWorkflowCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workflow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkflowCallAccess().getWorkflowKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWorkflowCallAccess().getNameWorkflowCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkflowCallAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowCallAccess().getVariantsWorkflowVariantMappingParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleWorkflowVariantMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowCallRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"WorkflowVariantMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWorkflowCallAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowCallAccess().getVariantsWorkflowVariantMappingParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleWorkflowVariantMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowCallRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"WorkflowVariantMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkflowCallAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWorkflowCallAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowCallAccess().getRolesWorkflowRoleMappingParserRuleCall_4_0()); 
	    }
		lv_roles_8_0=ruleWorkflowRoleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowCallRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_8_0, 
        		"WorkflowRoleMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getWorkflowCallAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowCallAccess().getRolesWorkflowRoleMappingParserRuleCall_5_1_0()); 
	    }
		lv_roles_10_0=ruleWorkflowRoleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowCallRule());
	        }
       		add(
       			$current, 
       			"roles",
        		lv_roles_10_0, 
        		"WorkflowRoleMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getWorkflowCallAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleWorkflowVariantMapping
entryRuleWorkflowVariantMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowVariantMappingRule()); }
	 iv_ruleWorkflowVariantMapping=ruleWorkflowVariantMapping 
	 { $current=$iv_ruleWorkflowVariantMapping.current; } 
	 EOF 
;

// Rule WorkflowVariantMapping
ruleWorkflowVariantMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowVariantMappingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWorkflowVariantMappingAccess().getParameterWorkflowVariantCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkflowVariantMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowVariantMappingRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getWorkflowVariantMappingAccess().getValueWorkflowVariantCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleWorkflowRoleMapping
entryRuleWorkflowRoleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowRoleMappingRule()); }
	 iv_ruleWorkflowRoleMapping=ruleWorkflowRoleMapping 
	 { $current=$iv_ruleWorkflowRoleMapping.current; } 
	 EOF 
;

// Rule WorkflowRoleMapping
ruleWorkflowRoleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowRoleMappingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWorkflowRoleMappingAccess().getParameterWorkflowRoleCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkflowRoleMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkflowRoleMappingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWorkflowRoleMappingAccess().getValueWorkflowRoleReferenceCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleTransaction
entryRuleTransaction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransactionRule()); }
	 iv_ruleTransaction=ruleTransaction 
	 { $current=$iv_ruleTransaction.current; } 
	 EOF 
;

// Rule Transaction
ruleTransaction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransactionAccess().getInformTransactionParserRuleCall_0()); 
    }
    this_InformTransaction_0=ruleInformTransaction
    { 
        $current = $this_InformTransaction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransactionAccess().getNotifyTransactionParserRuleCall_1()); 
    }
    this_NotifyTransaction_1=ruleNotifyTransaction
    { 
        $current = $this_NotifyTransaction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransactionAccess().getRequestTransactionParserRuleCall_2()); 
    }
    this_RequestTransaction_2=ruleRequestTransaction
    { 
        $current = $this_RequestTransaction_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInformTransaction
entryRuleInformTransaction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInformTransactionRule()); }
	 iv_ruleInformTransaction=ruleInformTransaction 
	 { $current=$iv_ruleInformTransaction.current; } 
	 EOF 
;

// Rule InformTransaction
ruleInformTransaction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_pattern_0_0=	'inform' 
    {
        newLeafNode(lv_pattern_0_0, grammarAccess.getInformTransactionAccess().getPatternInformKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformTransactionRule());
	        }
       		setWithLastConsumed($current, "pattern", lv_pattern_0_0, "inform");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInformTransactionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformTransactionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInformTransactionAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInformTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInformTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInformTransactionAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInformTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInformTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInformTransactionAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInformTransactionAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_8='send' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInformTransactionAccess().getSendKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInformTransactionAccess().getSendActionDatagramActionParserRuleCall_5_0()); 
	    }
		lv_sendAction_9_0=ruleDatagramAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInformTransactionRule());
	        }
       		set(
       			$current, 
       			"sendAction",
        		lv_sendAction_9_0, 
        		"DatagramAction");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInformTransactionAccess().getPostconditionsPostconditionsParserRuleCall_6_0()); 
	    }
		lv_postconditions_10_0=rulePostconditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInformTransactionRule());
	        }
       		set(
       			$current, 
       			"postconditions",
        		lv_postconditions_10_0, 
        		"Postconditions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInformTransactionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTransactionVariant
entryRuleTransactionVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransactionVariantRule()); }
	 iv_ruleTransactionVariant=ruleTransactionVariant 
	 { $current=$iv_ruleTransactionVariant.current; } 
	 EOF 
;

// Rule TransactionVariant
ruleTransactionVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTransactionVariantAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransactionVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleDatagramAction
entryRuleDatagramAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatagramActionRule()); }
	 iv_ruleDatagramAction=ruleDatagramAction 
	 { $current=$iv_ruleDatagramAction.current; } 
	 EOF 
;

// Rule DatagramAction
ruleDatagramAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDatagramActionAccess().getDatagramActionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDatagramActionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatagramActionAccess().getMessagesVariantMessageMappingsParserRuleCall_2_0()); 
	    }
		lv_messages_2_0=ruleVariantMessageMappings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatagramActionRule());
	        }
       		set(
       			$current, 
       			"messages",
        		lv_messages_2_0, 
        		"VariantMessageMappings");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDatagramActionAccess().getRequiresRequiredFeaturesParserRuleCall_3_0()); 
	    }
		lv_requires_3_0=ruleRequiredFeatures		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatagramActionRule());
	        }
       		set(
       			$current, 
       			"requires",
        		lv_requires_3_0, 
        		"RequiredFeatures");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDatagramActionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleVariantMessageMappings
entryRuleVariantMessageMappings returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariantMessageMappingsRule()); }
	 iv_ruleVariantMessageMappings=ruleVariantMessageMappings 
	 { $current=$iv_ruleVariantMessageMappings.current; } 
	 EOF 
;

// Rule VariantMessageMappings
ruleVariantMessageMappings returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='messages' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariantMessageMappingsAccess().getMessagesKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariantMessageMappingsAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantMessageMappingsAccess().getVariantsVariantMessageMappingParserRuleCall_2_0()); 
	    }
		lv_variants_2_0=ruleVariantMessageMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantMessageMappingsRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_2_0, 
        		"VariantMessageMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariantMessageMappingsAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantMessageMappingsAccess().getVariantsVariantMessageMappingParserRuleCall_3_1_0()); 
	    }
		lv_variants_4_0=ruleVariantMessageMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantMessageMappingsRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_4_0, 
        		"VariantMessageMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariantMessageMappingsAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleVariantMessageMapping
entryRuleVariantMessageMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariantMessageMappingRule()); }
	 iv_ruleVariantMessageMapping=ruleVariantMessageMapping 
	 { $current=$iv_ruleVariantMessageMapping.current; } 
	 EOF 
;

// Rule VariantMessageMapping
ruleVariantMessageMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantMessageMappingRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getVariantMessageMappingAccess().getVariantTransactionVariantCrossReference_0_0()); 
	}

)
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariantMessageMappingAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantMessageMappingAccess().getMappingsMessageMappingParserRuleCall_2_0()); 
	    }
		lv_mappings_2_0=ruleMessageMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantMessageMappingRule());
	        }
       		add(
       			$current, 
       			"mappings",
        		lv_mappings_2_0, 
        		"MessageMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariantMessageMappingAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantMessageMappingAccess().getMappingsMessageMappingParserRuleCall_3_1_0()); 
	    }
		lv_mappings_4_0=ruleMessageMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantMessageMappingRule());
	        }
       		add(
       			$current, 
       			"mappings",
        		lv_mappings_4_0, 
        		"MessageMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariantMessageMappingAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleMessageMapping
entryRuleMessageMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageMappingRule()); }
	 iv_ruleMessageMapping=ruleMessageMapping 
	 { $current=$iv_ruleMessageMapping.current; } 
	 EOF 
;

// Rule MessageMapping
ruleMessageMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMessageMappingAccess().getParameterMessageNameParserRuleCall_0_0()); 
	    }
		lv_parameter_0_0=ruleMessageName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageMappingRule());
	        }
       		set(
       			$current, 
       			"parameter",
        		lv_parameter_0_0, 
        		"MessageName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessageMappingAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageMappingAccess().getValueMessageNameParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleMessageName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageMappingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"MessageName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMessageName
entryRuleMessageName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageNameRule()); } 
	 iv_ruleMessageName=ruleMessageName 
	 { $current=$iv_ruleMessageName.current.getText(); }  
	 EOF 
;

// Rule MessageName
ruleMessageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getMessageNameAccess().getQualifiedNameParserRuleCall()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleRequiredFeatures
entryRuleRequiredFeatures returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredFeaturesRule()); }
	 iv_ruleRequiredFeatures=ruleRequiredFeatures 
	 { $current=$iv_ruleRequiredFeatures.current; } 
	 EOF 
;

// Rule RequiredFeatures
ruleRequiredFeatures returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='requires' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequiredFeaturesAccess().getRequiresKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRequiredFeaturesAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequiredFeaturesAccess().getFeaturesRequiredFeatureParserRuleCall_2_0()); 
	    }
		lv_features_2_0=ruleRequiredFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequiredFeaturesRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_2_0, 
        		"RequiredFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequiredFeaturesAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequiredFeaturesAccess().getFeaturesRequiredFeatureParserRuleCall_3_1_0()); 
	    }
		lv_features_4_0=ruleRequiredFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequiredFeaturesRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_4_0, 
        		"RequiredFeature");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequiredFeaturesAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleRequiredFeature
entryRuleRequiredFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredFeatureRule()); }
	 iv_ruleRequiredFeature=ruleRequiredFeature 
	 { $current=$iv_ruleRequiredFeature.current; } 
	 EOF 
;

// Rule RequiredFeature
ruleRequiredFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRequiredFeatureAccess().getAuthorizationFeatureParserRuleCall_0()); 
    }
    this_AuthorizationFeature_0=ruleAuthorizationFeature
    { 
        $current = $this_AuthorizationFeature_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequiredFeatureAccess().getNonRepudiationFeatureParserRuleCall_1()); 
    }
    this_NonRepudiationFeature_1=ruleNonRepudiationFeature
    { 
        $current = $this_NonRepudiationFeature_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAuthorizationFeature
entryRuleAuthorizationFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorizationFeatureRule()); }
	 iv_ruleAuthorizationFeature=ruleAuthorizationFeature 
	 { $current=$iv_ruleAuthorizationFeature.current; } 
	 EOF 
;

// Rule AuthorizationFeature
ruleAuthorizationFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_authorization_0_0=	'authorization' 
    {
        newLeafNode(lv_authorization_0_0, grammarAccess.getAuthorizationFeatureAccess().getAuthorizationAuthorizationKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorizationFeatureRule());
	        }
       		setWithLastConsumed($current, "authorization", true, "authorization");
	    }

)
)
;





// Entry rule entryRuleNonRepudiationFeature
entryRuleNonRepudiationFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonRepudiationFeatureRule()); }
	 iv_ruleNonRepudiationFeature=ruleNonRepudiationFeature 
	 { $current=$iv_ruleNonRepudiationFeature.current; } 
	 EOF 
;

// Rule NonRepudiationFeature
ruleNonRepudiationFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_nonrepudiation_0_0=	'nonrepudiation' 
    {
        newLeafNode(lv_nonrepudiation_0_0, grammarAccess.getNonRepudiationFeatureAccess().getNonrepudiationNonrepudiationKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonRepudiationFeatureRule());
	        }
       		setWithLastConsumed($current, "nonrepudiation", true, "nonrepudiation");
	    }

)
)
;





// Entry rule entryRuleNotifyTransaction
entryRuleNotifyTransaction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotifyTransactionRule()); }
	 iv_ruleNotifyTransaction=ruleNotifyTransaction 
	 { $current=$iv_ruleNotifyTransaction.current; } 
	 EOF 
;

// Rule NotifyTransaction
ruleNotifyTransaction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_pattern_0_0=	'notify' 
    {
        newLeafNode(lv_pattern_0_0, grammarAccess.getNotifyTransactionAccess().getPatternNotifyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNotifyTransactionRule());
	        }
       		setWithLastConsumed($current, "pattern", lv_pattern_0_0, "notify");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNotifyTransactionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNotifyTransactionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNotifyTransactionAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotifyTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotifyTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNotifyTransactionAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotifyTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotifyTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNotifyTransactionAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNotifyTransactionAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_8='send' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNotifyTransactionAccess().getSendKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotifyTransactionAccess().getSendActionOneWayActionParserRuleCall_5_0()); 
	    }
		lv_sendAction_9_0=ruleOneWayAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotifyTransactionRule());
	        }
       		set(
       			$current, 
       			"sendAction",
        		lv_sendAction_9_0, 
        		"OneWayAction");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNotifyTransactionAccess().getPostconditionsPostconditionsParserRuleCall_6_0()); 
	    }
		lv_postconditions_10_0=rulePostconditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotifyTransactionRule());
	        }
       		set(
       			$current, 
       			"postconditions",
        		lv_postconditions_10_0, 
        		"Postconditions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNotifyTransactionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOneWayAction
entryRuleOneWayAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOneWayActionRule()); }
	 iv_ruleOneWayAction=ruleOneWayAction 
	 { $current=$iv_ruleOneWayAction.current; } 
	 EOF 
;

// Rule OneWayAction
ruleOneWayAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOneWayActionAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOneWayActionAccess().getMessagesVariantMessageMappingsParserRuleCall_1_0()); 
	    }
		lv_messages_1_0=ruleVariantMessageMappings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneWayActionRule());
	        }
       		set(
       			$current, 
       			"messages",
        		lv_messages_1_0, 
        		"VariantMessageMappings");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOneWayActionAccess().getRequiresRequiredFeaturesParserRuleCall_2_0()); 
	    }
		lv_requires_2_0=ruleRequiredFeatures		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneWayActionRule());
	        }
       		set(
       			$current, 
       			"requires",
        		lv_requires_2_0, 
        		"RequiredFeatures");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOneWayActionAccess().getTimeoutsOneWayTimeOutsParserRuleCall_3_0()); 
	    }
		lv_timeouts_3_0=ruleOneWayTimeOuts		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneWayActionRule());
	        }
       		set(
       			$current, 
       			"timeouts",
        		lv_timeouts_3_0, 
        		"OneWayTimeOuts");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='retries' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOneWayActionAccess().getRetriesKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOneWayActionAccess().getEqualsSignKeyword_5());
    }
(
(
		lv_retries_6_0=RULE_INT
		{
			newLeafNode(lv_retries_6_0, grammarAccess.getOneWayActionAccess().getRetriesINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOneWayActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"retries",
        		lv_retries_6_0, 
        		"INT");
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOneWayActionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOneWayTimeOuts
entryRuleOneWayTimeOuts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOneWayTimeOutsRule()); }
	 iv_ruleOneWayTimeOuts=ruleOneWayTimeOuts 
	 { $current=$iv_ruleOneWayTimeOuts.current; } 
	 EOF 
;

// Rule OneWayTimeOuts
ruleOneWayTimeOuts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='timeouts' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOneWayTimeOutsAccess().getTimeoutsKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOneWayTimeOutsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOneWayTimeOutsAccess().getTimeoutsOneWayTimeOutParserRuleCall_2_0()); 
	    }
		lv_timeouts_2_0=ruleOneWayTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneWayTimeOutsRule());
	        }
       		add(
       			$current, 
       			"timeouts",
        		lv_timeouts_2_0, 
        		"OneWayTimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOneWayTimeOutsAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOneWayTimeOutsAccess().getTimeoutsOneWayTimeOutParserRuleCall_3_1_0()); 
	    }
		lv_timeouts_4_0=ruleOneWayTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneWayTimeOutsRule());
	        }
       		add(
       			$current, 
       			"timeouts",
        		lv_timeouts_4_0, 
        		"OneWayTimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOneWayTimeOutsAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleOneWayTimeOut
entryRuleOneWayTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOneWayTimeOutRule()); }
	 iv_ruleOneWayTimeOut=ruleOneWayTimeOut 
	 { $current=$iv_ruleOneWayTimeOut.current; } 
	 EOF 
;

// Rule OneWayTimeOut
ruleOneWayTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOneWayTimeOutAccess().getReceiptAckTimeOutParserRuleCall_0()); 
    }
    this_ReceiptAckTimeOut_0=ruleReceiptAckTimeOut
    { 
        $current = $this_ReceiptAckTimeOut_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOneWayTimeOutAccess().getValidationAckTimeOutParserRuleCall_1()); 
    }
    this_ValidationAckTimeOut_1=ruleValidationAckTimeOut
    { 
        $current = $this_ValidationAckTimeOut_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReceiptAckTimeOut
entryRuleReceiptAckTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReceiptAckTimeOutRule()); }
	 iv_ruleReceiptAckTimeOut=ruleReceiptAckTimeOut 
	 { $current=$iv_ruleReceiptAckTimeOut.current; } 
	 EOF 
;

// Rule ReceiptAckTimeOut
ruleReceiptAckTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='receipt' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReceiptAckTimeOutAccess().getReceiptKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReceiptAckTimeOutAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReceiptAckTimeOutAccess().getTimeoutTimeOutParserRuleCall_2_0()); 
	    }
		lv_timeout_2_0=ruleTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReceiptAckTimeOutRule());
	        }
       		set(
       			$current, 
       			"timeout",
        		lv_timeout_2_0, 
        		"TimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTimeOut
entryRuleTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeOutRule()); }
	 iv_ruleTimeOut=ruleTimeOut 
	 { $current=$iv_ruleTimeOut.current; } 
	 EOF 
;

// Rule TimeOut
ruleTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getTimeOutAccess().getValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeOutRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeOutAccess().getUnitTimeUnitEnumRuleCall_1_0()); 
	    }
		lv_unit_1_0=ruleTimeUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeOutRule());
	        }
       		set(
       			$current, 
       			"unit",
        		lv_unit_1_0, 
        		"TimeUnit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValidationAckTimeOut
entryRuleValidationAckTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidationAckTimeOutRule()); }
	 iv_ruleValidationAckTimeOut=ruleValidationAckTimeOut 
	 { $current=$iv_ruleValidationAckTimeOut.current; } 
	 EOF 
;

// Rule ValidationAckTimeOut
ruleValidationAckTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='validation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValidationAckTimeOutAccess().getValidationKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValidationAckTimeOutAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValidationAckTimeOutAccess().getTimeoutTimeOutParserRuleCall_2_0()); 
	    }
		lv_timeout_2_0=ruleTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValidationAckTimeOutRule());
	        }
       		set(
       			$current, 
       			"timeout",
        		lv_timeout_2_0, 
        		"TimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRequestTransaction
entryRuleRequestTransaction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequestTransactionRule()); }
	 iv_ruleRequestTransaction=ruleRequestTransaction 
	 { $current=$iv_ruleRequestTransaction.current; } 
	 EOF 
;

// Rule RequestTransaction
ruleRequestTransaction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getPatternPatternEnumRuleCall_0_0()); 
	    }
		lv_pattern_0_0=rulePattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_0_0, 
        		"Pattern");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequestTransactionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequestTransactionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequestTransactionAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_1_0()); 
	    }
		lv_variants_3_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_3_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequestTransactionAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getVariantsTransactionVariantParserRuleCall_2_2_1_0()); 
	    }
		lv_variants_5_0=ruleTransactionVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_5_0, 
        		"TransactionVariant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequestTransactionAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequestTransactionAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_8='send' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequestTransactionAccess().getSendKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getSendActionTwoWayActionParserRuleCall_5_0()); 
	    }
		lv_sendAction_9_0=ruleTwoWayAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		set(
       			$current, 
       			"sendAction",
        		lv_sendAction_9_0, 
        		"TwoWayAction");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='receive' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRequestTransactionAccess().getReceiveKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getReceiveActionOneWayActionParserRuleCall_7_0()); 
	    }
		lv_receiveAction_11_0=ruleOneWayAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		set(
       			$current, 
       			"receiveAction",
        		lv_receiveAction_11_0, 
        		"OneWayAction");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRequestTransactionAccess().getPostconditionsPostconditionsParserRuleCall_8_0()); 
	    }
		lv_postconditions_12_0=rulePostconditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequestTransactionRule());
	        }
       		set(
       			$current, 
       			"postconditions",
        		lv_postconditions_12_0, 
        		"Postconditions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRequestTransactionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleTwoWayAction
entryRuleTwoWayAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTwoWayActionRule()); }
	 iv_ruleTwoWayAction=ruleTwoWayAction 
	 { $current=$iv_ruleTwoWayAction.current; } 
	 EOF 
;

// Rule TwoWayAction
ruleTwoWayAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTwoWayActionAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayActionAccess().getMessagesVariantMessageMappingsParserRuleCall_1_0()); 
	    }
		lv_messages_1_0=ruleVariantMessageMappings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayActionRule());
	        }
       		set(
       			$current, 
       			"messages",
        		lv_messages_1_0, 
        		"VariantMessageMappings");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayActionAccess().getRequiresRequiredFeaturesParserRuleCall_2_0()); 
	    }
		lv_requires_2_0=ruleRequiredFeatures		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayActionRule());
	        }
       		set(
       			$current, 
       			"requires",
        		lv_requires_2_0, 
        		"RequiredFeatures");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayActionAccess().getTimeoutsTwoWayTimeOutsParserRuleCall_3_0()); 
	    }
		lv_timeouts_3_0=ruleTwoWayTimeOuts		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayActionRule());
	        }
       		set(
       			$current, 
       			"timeouts",
        		lv_timeouts_3_0, 
        		"TwoWayTimeOuts");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='retries' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTwoWayActionAccess().getRetriesKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTwoWayActionAccess().getEqualsSignKeyword_5());
    }
(
(
		lv_retries_6_0=RULE_INT
		{
			newLeafNode(lv_retries_6_0, grammarAccess.getTwoWayActionAccess().getRetriesINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTwoWayActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"retries",
        		lv_retries_6_0, 
        		"INT");
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTwoWayActionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTwoWayTimeOuts
entryRuleTwoWayTimeOuts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTwoWayTimeOutsRule()); }
	 iv_ruleTwoWayTimeOuts=ruleTwoWayTimeOuts 
	 { $current=$iv_ruleTwoWayTimeOuts.current; } 
	 EOF 
;

// Rule TwoWayTimeOuts
ruleTwoWayTimeOuts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='timeouts' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTwoWayTimeOutsAccess().getTimeoutsKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTwoWayTimeOutsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayTimeOutsAccess().getTimeoutsTwoWayTimeOutParserRuleCall_2_0()); 
	    }
		lv_timeouts_2_0=ruleTwoWayTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayTimeOutsRule());
	        }
       		add(
       			$current, 
       			"timeouts",
        		lv_timeouts_2_0, 
        		"TwoWayTimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTwoWayTimeOutsAccess().getCommaKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayTimeOutsAccess().getTimeoutsTwoWayTimeOutParserRuleCall_3_0_1_0()); 
	    }
		lv_timeouts_4_0=ruleTwoWayTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayTimeOutsRule());
	        }
       		add(
       			$current, 
       			"timeouts",
        		lv_timeouts_4_0, 
        		"TwoWayTimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTwoWayTimeOutsAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoWayTimeOutsAccess().getTimeoutsTwoWayTimeOutParserRuleCall_3_1_1_0()); 
	    }
		lv_timeouts_6_0=ruleTwoWayTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoWayTimeOutsRule());
	        }
       		add(
       			$current, 
       			"timeouts",
        		lv_timeouts_6_0, 
        		"TwoWayTimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTwoWayTimeOutsAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleTwoWayTimeOut
entryRuleTwoWayTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTwoWayTimeOutRule()); }
	 iv_ruleTwoWayTimeOut=ruleTwoWayTimeOut 
	 { $current=$iv_ruleTwoWayTimeOut.current; } 
	 EOF 
;

// Rule TwoWayTimeOut
ruleTwoWayTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTwoWayTimeOutAccess().getOneWayTimeOutParserRuleCall_0()); 
    }
    this_OneWayTimeOut_0=ruleOneWayTimeOut
    { 
        $current = $this_OneWayTimeOut_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTwoWayTimeOutAccess().getResponseTimeOutParserRuleCall_1()); 
    }
    this_ResponseTimeOut_1=ruleResponseTimeOut
    { 
        $current = $this_ResponseTimeOut_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleResponseTimeOut
entryRuleResponseTimeOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResponseTimeOutRule()); }
	 iv_ruleResponseTimeOut=ruleResponseTimeOut 
	 { $current=$iv_ruleResponseTimeOut.current; } 
	 EOF 
;

// Rule ResponseTimeOut
ruleResponseTimeOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='response' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResponseTimeOutAccess().getResponseKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResponseTimeOutAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResponseTimeOutAccess().getTimeoutTimeOutParserRuleCall_2_0()); 
	    }
		lv_timeout_2_0=ruleTimeOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResponseTimeOutRule());
	        }
       		set(
       			$current, 
       			"timeout",
        		lv_timeout_2_0, 
        		"TimeOut");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	 iv_ruleProtocol=ruleProtocol 
	 { $current=$iv_ruleProtocol.current; } 
	 EOF 
;

// Rule Protocol
ruleProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getProtocolAccess().getProtocolReferenceParserRuleCall_0()); 
    }
    this_ProtocolReference_0=ruleProtocolReference
    { 
        $current = $this_ProtocolReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProtocolAccess().getProtocolDeclarationParserRuleCall_1()); 
    }
    this_ProtocolDeclaration_1=ruleProtocolDeclaration
    { 
        $current = $this_ProtocolDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProtocolReference
entryRuleProtocolReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolReferenceRule()); }
	 iv_ruleProtocolReference=ruleProtocolReference 
	 { $current=$iv_ruleProtocolReference.current; } 
	 EOF 
;

// Rule ProtocolReference
ruleProtocolReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='protocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolReferenceAccess().getProtocolKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolReferenceAccess().getNameProtocolNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleProtocolName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolReferenceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ProtocolName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProtocolName
entryRuleProtocolName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolNameRule()); } 
	 iv_ruleProtocolName=ruleProtocolName 
	 { $current=$iv_ruleProtocolName.current.getText(); }  
	 EOF 
;

// Rule ProtocolName
ruleProtocolName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getProtocolNameAccess().getQualifiedNameParserRuleCall()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleProtocolDeclaration
entryRuleProtocolDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolDeclarationRule()); }
	 iv_ruleProtocolDeclaration=ruleProtocolDeclaration 
	 { $current=$iv_ruleProtocolDeclaration.current; } 
	 EOF 
;

// Rule ProtocolDeclaration
ruleProtocolDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='protocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolDeclarationAccess().getProtocolKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolDeclarationAccess().getNameProtocolNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleProtocolName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ProtocolName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProtocolDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='message' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProtocolDeclarationAccess().getMessageKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolDeclarationAccess().getMessagesMessageNameParserRuleCall_3_1_0()); 
	    }
		lv_messages_4_0=ruleMessageName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolDeclarationRule());
	        }
       		add(
       			$current, 
       			"messages",
        		lv_messages_4_0, 
        		"MessageName");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProtocolDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Rule TimeUnit
ruleTimeUnit returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='s' 
	{
        $current = grammarAccess.getTimeUnitAccess().getSECONDSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTimeUnitAccess().getSECONDSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='m' 
	{
        $current = grammarAccess.getTimeUnitAccess().getMINUTESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTimeUnitAccess().getMINUTESEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='h' 
	{
        $current = grammarAccess.getTimeUnitAccess().getHOURSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTimeUnitAccess().getHOURSEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='d' 
	{
        $current = grammarAccess.getTimeUnitAccess().getDAYSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTimeUnitAccess().getDAYSEnumLiteralDeclaration_3()); 
    }
));



// Rule Pattern
rulePattern returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='response' 
	{
        $current = grammarAccess.getPatternAccess().getResponseEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPatternAccess().getResponseEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='confirm' 
	{
        $current = grammarAccess.getPatternAccess().getConfirmEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPatternAccess().getConfirmEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='query' 
	{
        $current = grammarAccess.getPatternAccess().getQueryEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPatternAccess().getQueryEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='obligation' 
	{
        $current = grammarAccess.getPatternAccess().getObligationEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getPatternAccess().getObligationEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


